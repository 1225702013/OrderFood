<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dao.AppraiseMapper">
  <resultMap id="BaseResultMap" type="cn.pojo.Appraise">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="studentId" jdbcType="VARCHAR" property="studentid" />
    <result column="star" jdbcType="INTEGER" property="star" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="windowId" jdbcType="INTEGER" property="windowid" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="orderId" jdbcType="INTEGER" property="orderid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, studentId, star, info, windowId, date, orderId
  </sql>
  <select id="selectByExample" parameterType="cn.pojo.AppraiseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from appraise
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from appraise
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.pojo.AppraiseExample">
    delete from appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.pojo.Appraise">
    insert into appraise (id, studentId, star, 
      info, windowId, date, 
      orderId)
    values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=VARCHAR}, #{star,jdbcType=INTEGER}, 
      #{info,jdbcType=VARCHAR}, #{windowid,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, 
      #{orderid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.pojo.Appraise">
    insert into appraise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentid != null">
        studentId,
      </if>
      <if test="star != null">
        star,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="windowid != null">
        windowId,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="orderid != null">
        orderId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentid != null">
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        #{star,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="windowid != null">
        #{windowid,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.pojo.AppraiseExample" resultType="java.lang.Long">
    select count(*) from appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update appraise
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentid != null">
        studentId = #{record.studentid,jdbcType=VARCHAR},
      </if>
      <if test="record.star != null">
        star = #{record.star,jdbcType=INTEGER},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.windowid != null">
        windowId = #{record.windowid,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderid != null">
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update appraise
    set id = #{record.id,jdbcType=INTEGER},
      studentId = #{record.studentid,jdbcType=VARCHAR},
      star = #{record.star,jdbcType=INTEGER},
      info = #{record.info,jdbcType=VARCHAR},
      windowId = #{record.windowid,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      orderId = #{record.orderid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.pojo.Appraise">
    update appraise
    <set>
      <if test="studentid != null">
        studentId = #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="star != null">
        star = #{star,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="windowid != null">
        windowId = #{windowid,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="orderid != null">
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.pojo.Appraise">
    update appraise
    set studentId = #{studentid,jdbcType=VARCHAR},
      star = #{star,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR},
      windowId = #{windowid,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      orderId = #{orderid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>